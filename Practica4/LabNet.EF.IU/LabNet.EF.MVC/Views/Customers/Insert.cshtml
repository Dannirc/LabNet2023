@model LabNet.EF.MVC.Models.CustomersView


@{ object htmlAtributos(string placeholder)
    {
        return new { htmlAttributes = new { placeholder = placeholder, @class = "form-control" } };
    } }

@if (ViewBag.customer != null)
{
    ViewBag.Title = "Editar Cliente";
}
else
{
    ViewBag.Title = "Agregar Cliente";
}




@using (Html.BeginForm(@ViewBag.customer != null ? "Edit" : "Insert", "Customers", FormMethod.Post))
{
    <div class="card card-primary">
        <div class="card-header">
            @if (ViewBag.customer != null)
            {
                <h3 class="card-title">Editar un Cliente</h3>
            }
            else
            {
                <h3 class="card-title">Crear un nuevo Cliente</h3>
            }
        </div>
        <div class="card-body">
            @Html.HiddenFor(c => c.CustomerID)
            <div class="form-group">
                <strong>@Html.LabelFor(c => c.CompanyName, "Nombre Cliente", new { @class = "control-label" })</strong>
                <div class="col-md-10">
                    @Html.EditorFor(c => c.CompanyName, new { htmlAttributes = new { placeholder = "Ingrese Nombre de cliente", required = true, @class = "form-control" } })
                    @Html.ValidationMessageFor(c => c.CompanyName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <strong>@Html.LabelFor(c => c.ContactName, "Nombre de Contacto", htmlAttributes: new { @class = "control-label" })</strong>
                <div class="col-md-10">
                    @Html.EditorFor(c => c.ContactName, htmlAtributos("Ingrese nombre de contacto"))
                    @Html.ValidationMessageFor(c => c.ContactName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <strong>@Html.LabelFor(c => c.ContactTitle, "Cargo de Contacto", htmlAttributes: new { @class = "control-label" })</strong>
                <div class="col-md-10">
                    @Html.EditorFor(c => c.ContactTitle, htmlAtributos("Ingrese cargo de contacto"))
                    @Html.ValidationMessageFor(c => c.ContactTitle, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <strong>@Html.LabelFor(c => c.Address, "Direccion", htmlAttributes: new { @class = "control-label" })</strong>
                <div class="col-md-10">
                    @Html.EditorFor(c => c.Address, htmlAtributos("Ingrese dirección"))
                    @Html.ValidationMessageFor(c => c.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <strong>@Html.LabelFor(c => c.City, "Ciudad", htmlAttributes: new { @class = "control-label" })</strong>
                <div class="col-md-10">
                    @Html.EditorFor(c => c.City, htmlAtributos("Ingrese nombre de ciudad"))
                    @Html.ValidationMessageFor(c => c.City, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <strong>@Html.LabelFor(c => c.Region, "Region", htmlAttributes: new { @class = "control-label" })</strong>
                <div class="col-md-10">
                    @Html.EditorFor(c => c.Region, htmlAtributos("Ingrese nombre de region"))
                    @Html.ValidationMessageFor(c => c.Region, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <strong>@Html.LabelFor(c => c.PostalCode, "Cod. Postal", htmlAttributes: new { @class = "control-label" })</strong>
                <div class="col-md-10">
                    @Html.EditorFor(c => c.PostalCode, htmlAtributos("Ingrese codigo postal"))
                    @Html.ValidationMessageFor(c => c.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <strong>@Html.LabelFor(c => c.Country, "País", htmlAttributes: new { @class = "control-label" })</strong>
                <div class="col-md-10">
                    @Html.EditorFor(c => c.Country, htmlAtributos("Ingrese nombre de país"))
                    @Html.ValidationMessageFor(c => c.Country, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <strong>@Html.LabelFor(c => c.Phone, "Telefono", htmlAttributes: new { @class = "control-label" })</strong>
                <div class="col-md-10">
                    @Html.EditorFor(c => c.Phone, htmlAtributos("Ingrese numero de telefono"))
                    @Html.ValidationMessageFor(c => c.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <strong>@Html.LabelFor(c => c.Fax, "Fax", htmlAttributes: new { @class = "control-label" })</strong>
                <div class="col-md-10">
                    @Html.EditorFor(c => c.Fax, htmlAtributos("Que antiguedad!, No ingrese Nada"))
                    @Html.ValidationMessageFor(c => c.Fax, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
        </div>

        <div class="card-footer">
            <button type="submit" class="btn btn-success">Guardar</button>
            @Html.ActionLink("Cancelar", "Index", "Customers", null, new { @class = "btn btn-danger btn-large" })
        </div>

        </div>
}


